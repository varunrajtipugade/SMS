/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Varunraj
 */
public class product extends javax.swing.JFrame {

    /**
     * Creates new form product
     */
    public product() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("fav.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        catagory = new javax.swing.JComboBox<>();
        update = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        search = new javax.swing.JButton();
        newpro = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        pkddate = new com.toedter.calendar.JDateChooser();
        expdate = new com.toedter.calendar.JDateChooser();
        proid = new javax.swing.JTextField();
        proprice = new javax.swing.JTextField();
        proqty = new javax.swing.JTextField();
        availablepro = new javax.swing.JTextField();
        progst = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        prodis = new javax.swing.JTextField();
        proname = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        prcprice = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(240, 233, 212));

        catagory.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        catagory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Beverages", "Bakery", "Canned/Jarred Goods", "Dairy", "Dry/Baking Goods", "Frozen Foods", "Meat", "Vegitables/Fruits", "Cleaners", "Paper Goods", "Personal Care/Cosmatics", "Stationary", "Grosery", "Plastics", "Other" }));
        catagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catagoryActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        update.setText("UPDATE");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        insert.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        insert.setText("INSERT");
        insert.setEnabled(false);
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        delete.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        delete.setText("DELETE");
        delete.setEnabled(false);
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        refresh.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        search.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        newpro.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        newpro.setText("NEW");
        newpro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newproActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(54, 0, 0));
        jLabel9.setText("Discount: (%)");

        jLabel10.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(54, 0, 0));
        jLabel10.setText("Packed Date:");

        jLabel11.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(54, 0, 0));
        jLabel11.setText("Expiry Date:");

        pkddate.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N

        expdate.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N

        proid.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        proid.setText("0");
        proid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proidActionPerformed(evt);
            }
        });
        proid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                proidKeyTyped(evt);
            }
        });

        proprice.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        proprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                propriceActionPerformed(evt);
            }
        });
        proprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                propriceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                propriceKeyTyped(evt);
            }
        });

        proqty.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        proqty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proqtyActionPerformed(evt);
            }
        });
        proqty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                proqtyKeyTyped(evt);
            }
        });

        availablepro.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        availablepro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableproActionPerformed(evt);
            }
        });
        availablepro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                availableproKeyTyped(evt);
            }
        });

        progst.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        progst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                progstActionPerformed(evt);
            }
        });
        progst.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                progstKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(54, 0, 0));
        jLabel1.setText("Product Manager");

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(54, 0, 0));
        jLabel2.setText("Product ID:");

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(54, 0, 0));
        jLabel3.setText("Product Name:");

        jLabel4.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(54, 0, 0));
        jLabel4.setText("Catagory:");

        jLabel5.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(54, 0, 0));
        jLabel5.setText("Sell Price: (Rs)");

        jLabel6.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(54, 0, 0));
        jLabel6.setText("Qty:(Kg/Lr/Items)");

        jLabel7.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(54, 0, 0));
        jLabel7.setText("Total Available:");

        jLabel8.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(54, 0, 0));
        jLabel8.setText("GST: (%)");

        prodis.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        prodis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prodisActionPerformed(evt);
            }
        });
        prodis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prodisKeyTyped(evt);
            }
        });

        proname.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        proname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pronameActionPerformed(evt);
            }
        });
        proname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pronameKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(54, 0, 0));
        jLabel12.setText("Prch Price: (Rs)");

        prcprice.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        prcprice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prcpriceActionPerformed(evt);
            }
        });
        prcprice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                prcpriceKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(catagory, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(proprice)
                                    .addComponent(pkddate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(progst)
                                    .addComponent(availablepro)
                                    .addComponent(proname, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(proid, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(prodis)
                                .addComponent(expdate, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                                .addComponent(prcprice))
                            .addComponent(newpro, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(proqty, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(refresh)
                        .addGap(16, 16, 16)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(proname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(catagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(proprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(prcprice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(progst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(prodis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(proid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newpro, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(expdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(pkddate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(availablepro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(proqty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void prodisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prodisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prodisActionPerformed

    private void progstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progstActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_progstActionPerformed

    private void availableproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableproActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_availableproActionPerformed

    private void proqtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proqtyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proqtyActionPerformed

    private void pronameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pronameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pronameActionPerformed

    private void catagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catagoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catagoryActionPerformed

    private void proidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proidActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
        if(!proname.getText().equals("") && !prcprice.getText().equals("") && !proprice.getText().equals("") && !progst.getText().equals("") && !prodis.getText().equals("") && !proqty.getText().equals("") &&!availablepro.getText().equals("") && pkddate.getDate()!=null && expdate.getDate()!=null)
        { 
        Connection conn= DBConnection.connect();
        if(conn != null)
        {
            String sql;
                sql = "update product set pname=?,catagory=?,price=?,gst=?,discount=?,packdate=?,expiry=?,total=?,prc_price=? where pid=?;";
                try{
                    SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd");
                    PreparedStatement stat;
                    stat= conn.prepareStatement(sql);
                    try {
                        stat.setString(1,proname.getText());
                        stat.setString(2,String.valueOf(catagory.getSelectedItem()));
                        stat.setFloat(3,Float.parseFloat(proprice.getText()));
                        stat.setFloat(4,Float.parseFloat(progst.getText()));
                        stat.setFloat(5,Float.parseFloat(prodis.getText()));
                        stat.setDate(6,Date.valueOf(df.format(pkddate.getDate())));
                        stat.setDate(7,Date.valueOf(df.format(expdate.getDate())));
                        stat.setFloat(8,Float.parseFloat(availablepro.getText()));
                        stat.setFloat(9,Float.parseFloat(prcprice.getText()));
                        stat.setInt(10,Integer.parseInt(proid.getText()));
                    } 
                    catch (Exception e) 
                    {
                        JOptionPane.showMessageDialog(null, "Value can contain only one Decimal Point");   
                    }
                    int rowupdate= stat.executeUpdate();
                    if (rowupdate>0) {
                        JOptionPane.showMessageDialog(null, "Product Updated");
                        clearall();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Not Updated");                        
                    }
                }
                catch(SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Enter Valid Data");
                }
        }
         else
            {
                JOptionPane.showMessageDialog(null, "Not connected");
            }
        }
         else
        {
             JOptionPane.showMessageDialog(null, "Enetr Valid Data");
        }
    }//GEN-LAST:event_updateActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        if(!proname.getText().equals("") && !prcprice.getText().equals("") && !proprice.getText().equals("") && !progst.getText().equals("") && !prodis.getText().equals("") && !proqty.getText().equals("") &&!availablepro.getText().equals("") && pkddate.getDate()!=null && expdate.getDate()!=null)
        { 
            java.util.Date d1=pkddate.getDate();
            java.util.Date d2=expdate.getDate();
            if(d1.compareTo(d2)>0)
            {
                JOptionPane.showMessageDialog(null, "Expiry date must occurs after packed date");
            }
            else
            {
        if((Float.parseFloat(progst.getText())<100 && Float.parseFloat(progst.getText())>0)&&(Float.parseFloat(prodis.getText())<100 && Float.parseFloat(prodis.getText())>0))
        {
         Connection conn= DBConnection.connect();
            if(conn != null)
            {
            String sql;
                sql = "insert into product(pname,catagory,price,prc_price,gst,discount,packdate,expiry,total) values(?,?,?,?,?,?,?,?,?);";
                try{
                    SimpleDateFormat df=new SimpleDateFormat("yyyy-MM-dd");
                    PreparedStatement stat;
                    stat= conn.prepareStatement(sql);
                    try {        
                        stat.setString(1,proname.getText());
                        stat.setString(2,String.valueOf(catagory.getSelectedItem()));
                        stat.setFloat(3,Float.parseFloat(proprice.getText()));
                        stat.setFloat(4,Float.parseFloat(prcprice.getText()));
                        stat.setFloat(5,Float.parseFloat(progst.getText()));
                        stat.setFloat(6,Float.parseFloat(prodis.getText()));
                        stat.setFloat(9,Float.parseFloat(availablepro.getText()));
                        stat.setDate(7,Date.valueOf(df.format(pkddate.getDate())));
                        stat.setDate(8,Date.valueOf(df.format(expdate.getDate())));
                    } 
                    catch (Exception e) 
                    {
                        JOptionPane.showMessageDialog(null, "Value can contain only one Decimal Point");   
                    }
                                        
                    int rowupdate= stat.executeUpdate();
                    if (rowupdate>0) {
                        int id=lastid();
                        JOptionPane.showMessageDialog(null, "Product ID: "+id+"  was inserted");
                        clearall();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Not Added");
                    }
                }
                catch(SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Enter Valid Data");
                }
            }
         else
            {
                JOptionPane.showMessageDialog(null, "Not connected");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "The range of GST and Discount of Product must between 1 to 100");
            progst.setText("");
            prodis.setText("");
        }
            }
        }
        else
        {
             JOptionPane.showMessageDialog(null, "Enetr Valid Data");
        }
    }//GEN-LAST:event_insertActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
          Connection conn= DBConnection.connect();
        if(conn != null)
        {
            String sql;
                sql = "delete from product where pid=?;";
                try{
                    PreparedStatement stat;
                    stat= conn.prepareStatement(sql);
                    stat.setInt(1,Integer.parseInt(proid.getText()));                    
                    int rowupdate= stat.executeUpdate();
                    if (rowupdate>0) {
                        JOptionPane.showMessageDialog(null, "Product Deleted");
                        clearall();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Not Deleted");
                    }
                }
                catch(SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Enter Valid Data");
                }
        }
         else
            {
                JOptionPane.showMessageDialog(null, "Not connected");
            }
    }//GEN-LAST:event_deleteActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        clearall();
        proid.setEditable(true);
        proqty.setEditable(true);
    }//GEN-LAST:event_refreshActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
          proqty.setEditable(false);
          insert.setEnabled(false);
          update.setEnabled(true);
          delete.setEnabled(true);
          proqty.setText("1");
     
     Connection conn= DBConnection.connect();
      if(conn != null)
        {
                String sql;
                sql = "select * from product where pid=?;";
                try{
                    PreparedStatement stat;
                    stat= conn.prepareStatement(sql);
                    stat.setInt(1,Integer.parseInt(proid.getText()));
                    ResultSet rs=null;
                    rs=stat.executeQuery();
                        if(rs.next())
                        {
                           delete.setEnabled(true);
                           proid.setEditable(false);
                           update.setEnabled(true);
                           proname.setText(rs.getString("pname"));
                           catagory.setSelectedItem(rs.getString("catagory"));
                           proprice.setText(String.valueOf(rs.getFloat("price")));
                           prcprice.setText(String.valueOf(rs.getFloat("prc_price")));
                           progst.setText(String.valueOf(rs.getFloat("gst")));
                           prodis.setText(String.valueOf(rs.getFloat("discount")));
                           pkddate.setDate(rs.getDate("packdate"));
                           expdate.setDate(rs.getDate("expiry"));
                           availablepro.setText(String.valueOf(rs.getFloat("total")));                         
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Not Found");
                            clearall();
                        }
                }
                catch(SQLException ex)
                {
                    JOptionPane.showMessageDialog(null, "Please Enter valid Product ID..");
                }
        }
         else
            {
                JOptionPane.showMessageDialog(null, "Not connected");
            }
    }//GEN-LAST:event_searchActionPerformed

    private void newproActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newproActionPerformed
        // TODO add your handling code here:
        clearall();
        insert.setEnabled(true);
        proid.setText("Generating new ID....");
        proid.setEditable(false);
        proqty.setText("1");
        proqty.setEditable(false);
    }//GEN-LAST:event_newproActionPerformed

    private void pronameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pronameKeyTyped
        // TODO add your handling code here:
          char c=evt.getKeyChar();
        if(( Character.isDigit(c)||((evt.getKeyCode()== evt.VK_BACK_SPACE))))
        {
            evt.consume();
        }
    }//GEN-LAST:event_pronameKeyTyped

    private void proidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proidKeyTyped
        // TODO add your handling code here:
         char c=evt.getKeyChar();
        if(( !Character.isDigit(c)||((evt.getKeyCode()== evt.VK_BACK_SPACE))))
        {
            evt.consume();
        }
    }//GEN-LAST:event_proidKeyTyped

    private void propriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_propriceKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_propriceKeyTyped

    private void progstKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_progstKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_progstKeyTyped

    private void proqtyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_proqtyKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_proqtyKeyTyped

    private void prodisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prodisKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_prodisKeyTyped

    private void availableproKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_availableproKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_availableproKeyTyped

    private void propriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_propriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_propriceActionPerformed

    private void prcpriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prcpriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_prcpriceActionPerformed

    private void prcpriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prcpriceKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if((c!='0' && c!='1' && c!='2' && c!='3' && c!='4' && c!='5' && c!='6' && c!='7' && c!='8' && c!='9' && c!='.'))
        {
            evt.consume();
        }
    }//GEN-LAST:event_prcpriceKeyTyped

    private void propriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_propriceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_propriceKeyReleased

 public void clearall()
 {
        catagory.setSelectedIndex(0);
        proid.setText("0");
        proid.setEditable(true);
        proname.setText("");
        proprice.setText("");
        prcprice.setText("");
        proqty.setText("");
        availablepro.setText("");
        progst.setText("");
        pkddate.setCalendar(null);
        expdate.setCalendar(null);
        prodis.setText("");
        insert.setEnabled(false);
        update.setEnabled(false);
        delete.setEnabled(false);
 }
    
 public int lastid()
    {
        int x=0;
        Connection conn= DBConnection.connect();
        if(conn != null)
        {
            String sql;
            sql = "select max(pid) from product;";
              try{
                    Statement stat=conn.createStatement();
                    ResultSet rs=stat.executeQuery(sql);
                        if(rs.next())
                        {
                               x=rs.getInt(1);                    
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Not Found");
                        }
                }
                catch(SQLException ex)
                {
                  
                }
        }
         else
            {
                JOptionPane.showMessageDialog(null, "Not connected");
            }
        return x;
    }  

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField availablepro;
    private javax.swing.JComboBox<String> catagory;
    private javax.swing.JButton delete;
    private javax.swing.JButton exit;
    private com.toedter.calendar.JDateChooser expdate;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton newpro;
    private com.toedter.calendar.JDateChooser pkddate;
    private javax.swing.JTextField prcprice;
    private javax.swing.JTextField prodis;
    private javax.swing.JTextField progst;
    private javax.swing.JTextField proid;
    private javax.swing.JTextField proname;
    private javax.swing.JTextField proprice;
    private javax.swing.JTextField proqty;
    private javax.swing.JButton refresh;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
