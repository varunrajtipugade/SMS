/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author Varunraj
 */
public class vendor extends javax.swing.JFrame {

    /**
     * Creates new form vendor
     */
    public vendor() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("fav.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        email = new javax.swing.JTextField();
        vname = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        vid = new javax.swing.JTextField();
        agency = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        refresh = new javax.swing.JButton();
        insert = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        del = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        new1 = new javax.swing.JButton();
        mobile = new javax.swing.JTextField();
        ac = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(198, 227, 240));

        email.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });

        vname.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        vname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vnameActionPerformed(evt);
            }
        });
        vname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vnameKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(29, 71, 121));
        jLabel3.setText("Vendor Name:");

        jLabel10.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(29, 71, 121));
        jLabel10.setText("Email:");

        exit.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(29, 71, 121));
        jLabel2.setText("Vendor ID:");

        jLabel7.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(29, 71, 121));
        jLabel7.setText("Mobile Number:");

        vid.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        vid.setText("0");
        vid.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                vidInputMethodTextChanged(evt);
            }
        });
        vid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vidActionPerformed(evt);
            }
        });
        vid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vidKeyTyped(evt);
            }
        });

        agency.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        agency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agencyActionPerformed(evt);
            }
        });
        agency.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                agencyKeyTyped(evt);
            }
        });

        address.setColumns(20);
        address.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        address.setRows(5);
        jScrollPane1.setViewportView(address);

        refresh.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });

        insert.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        insert.setText("INSERT");
        insert.setEnabled(false);
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        update.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        update.setText("UPDATE");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(29, 71, 121));
        jLabel5.setText("Address:");

        del.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        del.setText("DELETE");
        del.setEnabled(false);
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(29, 71, 121));
        jLabel1.setText("Vendor Manager");

        search.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        search.setText("SEARCH");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        new1.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        new1.setText("NEW");
        new1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new1ActionPerformed(evt);
            }
        });

        mobile.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        mobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileActionPerformed(evt);
            }
        });
        mobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mobileKeyTyped(evt);
            }
        });

        ac.setFont(new java.awt.Font("Arial Narrow", 0, 18)); // NOI18N
        ac.setForeground(new java.awt.Color(29, 71, 121));
        ac.setText("Agency Name:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(ac))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(agency, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vid, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vname, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(new1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(refresh)
                                    .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(vid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(vname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(new1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(agency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void vnameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vnameKeyTyped
        // TODO add your handling code here:
        char c=evt.getKeyChar();
        if(( Character.isDigit(c)||((evt.getKeyCode()== evt.VK_BACK_SPACE))))
        {
            evt.consume();
        }
    }//GEN-LAST:event_vnameKeyTyped

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void vidInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_vidInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_vidInputMethodTextChanged

    private void vidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vidActionPerformed

    private void vidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vidKeyTyped
        // TODO add your handling code here:

        char c=evt.getKeyChar();
        if(( !Character.isDigit(c)||((evt.getKeyCode()== evt.VK_BACK_SPACE))))
        {
            evt.consume();
        }
    }//GEN-LAST:event_vidKeyTyped

    private void agencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agencyActionPerformed

    private void agencyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_agencyKeyTyped
        // TODO add your handling code here:
       char c=evt.getKeyChar();
        if(( Character.isDigit(c)||((evt.getKeyCode()== evt.VK_BACK_SPACE))))
        {
            evt.consume();
        }
    }//GEN-LAST:event_agencyKeyTyped

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        clearall();
        vid.setEditable(true);
        vid.setText("0");
        insert.setEnabled(false);
        del.setEnabled(false);
        update.setEnabled(false);

    }//GEN-LAST:event_refreshActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed
        // TODO add your handling code here:
        int er=0;
        if(!vname.getText().equals("") &&  !address.getText().equals("") &&  !agency.getText().equals("") && !email.getText().equals("") && !mobile.getText().equals(""))
        {
            String moblen=mobile.getText();
            int lenmob=moblen.length();
            if(lenmob==10)
            {
                Connection conn= DBConnection.connect();
                if(conn != null)
                {
                    String sql;
                    sql = "insert into vendor(v_name,address,agency,mob,email) values(?,?,?,?,?);";
                    try{
                        PreparedStatement stat;
                        stat= conn.prepareStatement(sql);
                        stat.setString(1,vname.getText());
                        stat.setString(2,address.getText());
                        stat.setString(3,agency.getText());
                        stat.setLong(4,Long.parseLong(mobile.getText()));
                        stat.setString(5,email.getText());                       
                        int rowupdate= stat.executeUpdate();
                        if (rowupdate>0) {
                            int id=lastid();
                            JOptionPane.showMessageDialog(null, "Vendor ID: "+id+"  was inserted");
                            clearall();
                            vid.setEditable(true);
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Not Added");
                        }
                    }
                    catch(SQLException ex)
                    {
                        if(er==0)
                        JOptionPane.showMessageDialog(null, "This Username is Not Available..");
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Not connected");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Enter Valid Mobile Number.");
            }

        }
        else
        {
            JOptionPane.showMessageDialog(null, "Enetr Valid Data");
        }

    }//GEN-LAST:event_insertActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        int er=0;
        if(!vname.getText().equals("") &&  !address.getText().equals("") &&  !agency.getText().equals("") && !email.getText().equals("") && !mobile.getText().equals(""))
        {
            String moblen=mobile.getText();
            int lenmob=moblen.length();
            if(lenmob==10)
            {
                Connection conn= DBConnection.connect();
                if(conn != null)
                {
                    String sql;
                    sql = "update vendor set v_name=?,address=?,agency=?,mob=?,email=? where v_id=?;";
                    try{
                        PreparedStatement stat;
                        stat= conn.prepareStatement(sql);
                        stat.setString(1,vname.getText());
                        stat.setString(2,address.getText());
                        stat.setString(3,agency.getText());
                        stat.setLong(4,Long.parseLong(mobile.getText()));
                        stat.setString(5,email.getText());  
                        stat.setInt(6,Integer.parseInt(vid.getText()));
                        int rowupdate= stat.executeUpdate();
                        if (rowupdate>0) {
                            int id=lastid();
                            JOptionPane.showMessageDialog(null, "Vendor ID: "+id+"  was updated");
                            clearall();
                            vid.setEditable(true);
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Not updated");
                        }
                    }
                    catch(SQLException ex)
                    {
                        if(er==0)
                        JOptionPane.showMessageDialog(null, ex);
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Not connected");
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Enter Valid Mobile Number.");
            }

        }
        else
        {
            JOptionPane.showMessageDialog(null, "Enetr Valid Data");
        }
    }//GEN-LAST:event_updateActionPerformed

    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        // TODO add your handling code here:
        Connection conn= DBConnection.connect();
        if(conn != null)
        {
            String sql;
            sql = "delete from vendor where v_id=?;";
            try{
                PreparedStatement stat;
                stat= conn.prepareStatement(sql);
                stat.setInt(1,Integer.parseInt(vid.getText()));
                int rowupdate= stat.executeUpdate();
                if (rowupdate>0) {
                    JOptionPane.showMessageDialog(null, "Vendor Deleted");
                    clearall();
                    vid.setEditable(true);
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Not Deleted");
                }
            }
            catch(SQLException ex)
            {

            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Not connected");
        }
    }//GEN-LAST:event_delActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        insert.setEnabled(false);

        Connection conn= DBConnection.connect();
        if(conn != null)
        {
            String sql;
            sql = "select * from vendor where v_id=?;";
            try{
                PreparedStatement stat;
                stat= conn.prepareStatement(sql);
                stat.setInt(1,Integer.parseInt(vid.getText()));
                ResultSet rs=null;
                rs=stat.executeQuery();
                if(rs.next())
                {
                    del.setEnabled(true);
                    vid.setEditable(false);
                    update.setEnabled(true);

                    vname.setText(rs.getString("v_name"));
                    address.setText(rs.getString("address"));
                    agency.setText(rs.getString("agency"));
                    mobile.setText(String.valueOf(rs.getLong("mob")));
                    email.setText(rs.getString("email"));
                }
                else
                {
                    JOptionPane.showMessageDialog(null, "Not Found");
                    clearall();
                    vid.setEditable(true);
                }
            }
            catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Please Enter Employee ID..");
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Not connected");
        }
    }//GEN-LAST:event_searchActionPerformed

    private void new1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new1ActionPerformed
        // TODO add your handling code here:
        clearall();
        vid.setText("Generating new ID....");
        insert.setEnabled(true);
        vid.setEditable(false);
        del.setEnabled(false);
        update.setEnabled(false);
    }//GEN-LAST:event_new1ActionPerformed

    private void mobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileActionPerformed

    private void mobileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mobileKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileKeyTyped

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost
        // TODO add your handling code here:
        Pattern pe;
        Matcher me;
        boolean testemail;
        String emailid=email.getText();
        String emailpattern="^[a-zA-Z0-9_!#$%&’*+/=?`{|}~^.-]+@[a-zA-Z0-9.-]+$";
        pe=Pattern.compile(emailpattern);
        me=pe.matcher(emailid);
        testemail=me.matches();
        
        if(!testemail)
        {
           JOptionPane.showMessageDialog(null, "Invalid Email");
            email.requestFocus(); 
        }
    }//GEN-LAST:event_emailFocusLost

    private void vnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vnameActionPerformed

    public void clearall()
    {
        vid.setText("0");
        vname.setText("");
        address.setText("");
        agency.setText("");
        mobile.setText("");
        email.setText("");
        insert.setEnabled(false);
        update.setEnabled(false);
        del.setEnabled(false);
        
    }
    
    public int lastid()
    {
        int x=0;
        Connection conn= DBConnection.connect();
        if(conn != null)
        {
            String sql;
            sql = "select max(v_id) from vendor;";
              try{
                    Statement stat=conn.createStatement();
                    ResultSet rs=stat.executeQuery(sql);
                        if(rs.next())
                        {
                               x=rs.getInt(1);                    
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(null, "Not Found");
                        }
                }
                catch(SQLException ex)
                {
                  
                }
        }
         else
            {
                JOptionPane.showMessageDialog(null, "Not connected");
            }
        return x;
    }    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vendor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vendor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ac;
    private javax.swing.JTextArea address;
    private javax.swing.JTextField agency;
    private javax.swing.JButton del;
    private javax.swing.JTextField email;
    private javax.swing.JButton exit;
    private javax.swing.JButton insert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField mobile;
    private javax.swing.JButton new1;
    private javax.swing.JButton refresh;
    private javax.swing.JButton search;
    private javax.swing.JButton update;
    private javax.swing.JTextField vid;
    private javax.swing.JTextField vname;
    // End of variables declaration//GEN-END:variables
}
